// MIT License

// Copyright (c) 2021 EASE Lab

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: proto/graph_bfs/graph_bfs.proto

package graph_bfs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GraphBFSBenchmarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphBFSBenchmarkRequest) Reset() {
	*x = GraphBFSBenchmarkRequest{}
	mi := &file_proto_graph_bfs_graph_bfs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphBFSBenchmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphBFSBenchmarkRequest) ProtoMessage() {}

func (x *GraphBFSBenchmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_graph_bfs_graph_bfs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphBFSBenchmarkRequest.ProtoReflect.Descriptor instead.
func (*GraphBFSBenchmarkRequest) Descriptor() ([]byte, []int) {
	return file_proto_graph_bfs_graph_bfs_proto_rawDescGZIP(), []int{0}
}

func (x *GraphBFSBenchmarkRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GraphBFSBenchmarkReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphBFSBenchmarkReply) Reset() {
	*x = GraphBFSBenchmarkReply{}
	mi := &file_proto_graph_bfs_graph_bfs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphBFSBenchmarkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphBFSBenchmarkReply) ProtoMessage() {}

func (x *GraphBFSBenchmarkReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_graph_bfs_graph_bfs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphBFSBenchmarkReply.ProtoReflect.Descriptor instead.
func (*GraphBFSBenchmarkReply) Descriptor() ([]byte, []int) {
	return file_proto_graph_bfs_graph_bfs_proto_rawDescGZIP(), []int{1}
}

func (x *GraphBFSBenchmarkReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_graph_bfs_graph_bfs_proto protoreflect.FileDescriptor

const file_proto_graph_bfs_graph_bfs_proto_rawDesc = "" +
	"\n" +
	"\x1fproto/graph_bfs/graph_bfs.proto\x12\tgraph_bfs\".\n" +
	"\x18GraphBFSBenchmarkRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"2\n" +
	"\x16GraphBFSBenchmarkReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2g\n" +
	"\x11GraphBFSBenchmark\x12R\n" +
	"\x06GetBfs\x12#.graph_bfs.GraphBFSBenchmarkRequest\x1a!.graph_bfs.GraphBFSBenchmarkReply\"\x00B:Z8github.com/vhive-serverless/vSwarm-proto/proto/graph_bfsb\x06proto3"

var (
	file_proto_graph_bfs_graph_bfs_proto_rawDescOnce sync.Once
	file_proto_graph_bfs_graph_bfs_proto_rawDescData []byte
)

func file_proto_graph_bfs_graph_bfs_proto_rawDescGZIP() []byte {
	file_proto_graph_bfs_graph_bfs_proto_rawDescOnce.Do(func() {
		file_proto_graph_bfs_graph_bfs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_graph_bfs_graph_bfs_proto_rawDesc), len(file_proto_graph_bfs_graph_bfs_proto_rawDesc)))
	})
	return file_proto_graph_bfs_graph_bfs_proto_rawDescData
}

var file_proto_graph_bfs_graph_bfs_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_graph_bfs_graph_bfs_proto_goTypes = []any{
	(*GraphBFSBenchmarkRequest)(nil), // 0: graph_bfs.GraphBFSBenchmarkRequest
	(*GraphBFSBenchmarkReply)(nil),   // 1: graph_bfs.GraphBFSBenchmarkReply
}
var file_proto_graph_bfs_graph_bfs_proto_depIdxs = []int32{
	0, // 0: graph_bfs.GraphBFSBenchmark.GetBfs:input_type -> graph_bfs.GraphBFSBenchmarkRequest
	1, // 1: graph_bfs.GraphBFSBenchmark.GetBfs:output_type -> graph_bfs.GraphBFSBenchmarkReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_graph_bfs_graph_bfs_proto_init() }
func file_proto_graph_bfs_graph_bfs_proto_init() {
	if File_proto_graph_bfs_graph_bfs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_graph_bfs_graph_bfs_proto_rawDesc), len(file_proto_graph_bfs_graph_bfs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_graph_bfs_graph_bfs_proto_goTypes,
		DependencyIndexes: file_proto_graph_bfs_graph_bfs_proto_depIdxs,
		MessageInfos:      file_proto_graph_bfs_graph_bfs_proto_msgTypes,
	}.Build()
	File_proto_graph_bfs_graph_bfs_proto = out.File
	file_proto_graph_bfs_graph_bfs_proto_goTypes = nil
	file_proto_graph_bfs_graph_bfs_proto_depIdxs = nil
}
